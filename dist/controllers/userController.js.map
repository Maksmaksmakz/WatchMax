{"version":3,"sources":["../../src/controllers/userController.js"],"names":["router","Router","post","req","res","console","log","newUser","name","body","status","energyLevel","position","coordinates","save","err","send","json","message","get","find","users","findById","params","id","user","put","long","lat","newMessage","text","review","messages","push","module","exports"],"mappings":"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","file":"userController.js","sourcesContent":["import express from \"express\"\nconst router = express.Router()\nimport bodyParser from \"body-parser\"\n\nimport User from \"../models/user\"\nimport Message from \"../models/message\"\nimport { pushToAllDevices } from \"../fcm/fcmManager\"\n\n// POST \"api/v1/user\" - Create user\nrouter.post(\"/\", (req, res) => {\n  console.log(\"post request to user\")\n  const newUser = new User()\n  newUser.name = req.body.name\n  newUser.status = req.body.status\n  newUser.energyLevel = req.body.energyLevel\n  newUser.position.coordinates = req.body.position.coordinates\n\n  newUser.save(err => {\n    if(err){\n      res.send(err)\n    }\n    res.json({message: \"User created\"})\n  })\n})\n\n// GET \"api/v1/user\" - Get users\nrouter.get(\"/\", (req, res) => {\n  console.log(\"get request\")\n  User.find({}, (err, users) => {\n    if(err){\n      res.status(500).send(`Couldn get users Error: ${err}`)\n      return\n    }\n    res.json(users)\n  })\n})\n\n// GET \"api/v1/user/status\" - Get users status\nrouter.get(\"/:id/status\", (req, res) => {\n  console.log(\"get request\")\n  User.findById(req.params.id, (err, user) => {\n    if(err){\n      res.status(500).send(`Couldn find user Error: ${err}`)\n      return\n    }\n    res.json(user.status)\n  })\n})\n\n//PUT \"/api/v1/user/position\"\nrouter.put(\"/position\", (req, res) => {\n  console.log(\"put request to user\")\n    User.find({}, (err, users) => {\n      if(err) {\n        res.send(err)\n      }\n      let user = users[0]\n      user.position.coordinates.long = req.body.coordinates.long;\n      user.position.coordinates.lat = req.body.coordinates.lat;\n      user.save(err => {\n        if(err){\n          res.send(err)\n        }\n        res.json({ message: \"User updated\" })\n        pushToAllDevices(\n            \"Max ist jetzt woanders\",\n            \"Max hat seine Position aktualisiert\"\n          )\n      })\n  })\n})\n\n// PUT \"api/v1/user/message\" - addNew Message\nrouter.post(\"/message\", (req, res) => {\n  console.log(\"post request to messages\")\n    User.find({}, (err, users) => {\n      if(err) {\n        res.send(err)\n      }\n      let user = users[0]\n      let newMessage = new Message\n      console.log(req.body)\n      newMessage.text = req.body.message.text;\n      console.log(newMessage)\n      newMessage.save((err, review) => {\n        if(err){\n          res.send(err)\n        }\n        user.messages.push(newMessage)\n        console.log(\"user.messages: \" + user.messages)\n        user.save(err => {\n          if(err){\n            res.send(err)\n          }\n          res.json({newMessage:\"new Message saved\"})\n          pushToAllDevices(\n              \"Max hat was gepostet\",\n              \"Max hat einen Neuen Status gepostet\"\n          )\n        })\n      })\n    })\n  })\n\n// PUT \"api/v1/user/messages\" - get all Messages\nrouter.get(\"/messages\", (req, res) => {\n  console.log(\"get request to messages\")\n  Message.find({}, (err, messages) => {\n    if(err){\n      res.status(500).send(`Couldn get messages Error: ${err}`)\n      return\n    }\n    console.log(messages)\n    res.json(messages)\n  })\n})\n\n\n// PUT \"api/v1/user\" - Update user\nrouter.put(\"/:id\", (req, res) => {\n    User.findById(req.params.id, (err, user) => {\n      if(err) {\n        res.send(err)\n      }\n      user.name = req.body.name\n      user.status = req.body.status\n      user.energyLevel = req.body.energyLevel\n      user.position.coordinates = req.body.position.coordinates\n      user.save(err => {\n        if(err){\n          res.send(err)\n        }\n        res.json({ message: \"User updated\" })\n      })\n    })\n  })\nmodule.exports = router\n"]}